/**
 * Generated by orval v6.10.2 üç∫
 * Do not edit manually.
 * SchoolUtilities API
 * OpenAPI spec version: 1.0
 */
import axios from "axios";
import type { AxiosRequestConfig, AxiosResponse, AxiosError } from "axios";
import { useMutation } from "@tanstack/react-query";
import type {
  UseMutationOptions,
  MutationFunction,
} from "@tanstack/react-query";
import type { AddCourseDto } from "../../backend/src/model";

type AwaitedInput<T> = PromiseLike<T> | T;

type Awaited<O> = O extends AwaitedInput<infer T> ? T : never;

export const courseControllerAddCourse = (
  addCourseDto: AddCourseDto,
  options?: AxiosRequestConfig
): Promise<AxiosResponse<void>> => {
  return axios.post(`/api/course/addCourse`, addCourseDto, options);
};

export type CourseControllerAddCourseMutationResult = NonNullable<
  Awaited<ReturnType<typeof courseControllerAddCourse>>
>;
export type CourseControllerAddCourseMutationBody = AddCourseDto;
export type CourseControllerAddCourseMutationError = AxiosError<unknown>;

export const useCourseControllerAddCourse = <
  TError = AxiosError<unknown>,
  TContext = unknown
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof courseControllerAddCourse>>,
    TError,
    { data: AddCourseDto },
    TContext
  >;
  axios?: AxiosRequestConfig;
}) => {
  const { mutation: mutationOptions, axios: axiosOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof courseControllerAddCourse>>,
    { data: AddCourseDto }
  > = (props) => {
    const { data } = props ?? {};

    return courseControllerAddCourse(data, axiosOptions);
  };

  return useMutation<
    Awaited<ReturnType<typeof courseControllerAddCourse>>,
    TError,
    { data: AddCourseDto },
    TContext
  >(mutationFn, mutationOptions);
};
